"use client"

import { Dialog, DialogContent } from "@/components/ui/dialog"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { AlertTriangle, Crown, Lock, Zap, X, CheckCircle } from "lucide-react"
import { useTheme } from "@/hooks/use-theme"

interface SubscriptionExpiredModalProps {
  isOpen: boolean
  onUpgrade: () => void
}

export default function SubscriptionExpiredModal({ isOpen, onUpgrade }: SubscriptionExpiredModalProps) {
  const { actualTheme } = useTheme()
  const isDark = actualTheme === "dark"

  const blockedFeatures = [
    "üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –æ—Ç—á–µ—Ç—ã",
    "ü§ñ AI-—á–∞—Ç –∏ –ø–æ–º–æ—â–Ω–∏–∫",
    "üìß Email —Ä–∞—Å—Å—ã–ª–∫–∏",
    "üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º",
    "‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á",
    "üìà SWOT –∞–Ω–∞–ª–∏–∑",
    "üìã PDF —ç–∫—Å–ø–æ—Ä—Ç",
    "üîó –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",
  ]

  const premiumFeatures = [
    "–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π AI-—á–∞—Ç",
    "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞",
    "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç—á–µ—Ç—ã",
    "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞",
    "–í—Å–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",
    "–≠–∫—Å–ø–æ—Ä—Ç –≤ –ª—é–±—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö",
  ]

  return (
    <Dialog open={isOpen} onOpenChange={() => {}} modal>
      <DialogContent
        className={`max-w-2xl max-h-[90vh] overflow-y-auto border-0 theme-transition ${
          isDark ? "bg-gray-800" : "bg-white"
        } [&>button]:hidden`}
      >
        <div className="max-h-[85vh] overflow-y-auto">
          {/* Header with gradient */}
          <div className="relative bg-gradient-to-br from-red-500 via-red-600 to-orange-600 text-white p-6 text-center">
            <div className="absolute inset-0 bg-black/10"></div>
            <div className="relative z-10">
              <div className="w-16 h-16 bg-white/20 rounded-full mx-auto mb-3 flex items-center justify-center backdrop-blur-sm">
                <AlertTriangle className="w-8 h-8 text-white" />
              </div>
              <h1 className="text-2xl font-bold mb-2">–ü–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞!</h1>
              <p className="text-base opacity-90">–í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–º–æ—Ä–æ–∂–µ–Ω—ã –¥–æ –ø—Ä–æ–¥–ª–µ–Ω–∏—è</p>
            </div>
          </div>

          <div className="p-6 space-y-6">
            {/* Status Alert */}
            <div
              className={`p-4 rounded-xl border-2 border-red-200 theme-transition ${
                isDark ? "bg-red-900/20 border-red-800" : "bg-red-50"
              }`}
            >
              <div className="flex items-center space-x-3">
                <Lock className="w-5 h-5 text-red-500 flex-shrink-0" />
                <div>
                  <h3 className={`font-bold text-sm theme-transition ${isDark ? "text-red-400" : "text-red-700"}`}>
                    –î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω
                  </h3>
                  <p className={`text-xs theme-transition ${isDark ? "text-red-300" : "text-red-600"}`}>
                    –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è" –∏—Å—Ç–µ–∫–ª–∞ 5 –¥–Ω–µ–π –Ω–∞–∑–∞–¥. –ü—Ä–æ–¥–ª–∏—Ç–µ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞.
                  </p>
                </div>
              </div>
            </div>

            {/* Blocked Features */}
            <div>
              <h3 className={`font-bold text-base mb-3 theme-transition ${isDark ? "text-white" : "text-gray-900"}`}>
                üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:
              </h3>
              <div className="grid grid-cols-1 sm:grid-cols-2 gap-2">
                {blockedFeatures.map((feature, index) => (
                  <div
                    key={index}
                    className={`flex items-center p-2 rounded-lg border theme-transition ${
                      isDark ? "bg-gray-700/50 border-gray-600" : "bg-gray-50 border-gray-200"
                    }`}
                  >
                    <X className="w-3 h-3 text-red-500 mr-2 flex-shrink-0" />
                    <span className={`text-xs theme-transition ${isDark ? "text-gray-300" : "text-gray-700"}`}>
                      {feature}
                    </span>
                  </div>
                ))}
              </div>
            </div>

            {/* Special Offer */}
            <div className="relative">
              <Badge className="absolute -top-3 left-1/2 transform -translate-x-1/2 bg-gradient-to-r from-orange-500 to-red-500 text-white px-3 py-1 z-10 text-xs">
                üî• –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
              </Badge>
              <div
                className={`p-5 rounded-2xl border-2 theme-transition ${
                  isDark
                    ? "bg-gradient-to-br from-gray-700 to-gray-800 border-orange-600"
                    : "bg-gradient-to-br from-orange-50 to-red-50 border-orange-300"
                }`}
              >
                <div className="text-center mb-4">
                  <div className="flex items-center justify-center space-x-2 mb-2">
                    <Crown className="w-5 h-5 text-orange-500" />
                    <h3 className={`text-lg font-bold theme-transition ${isDark ? "text-white" : "text-gray-900"}`}>
                      –ü—Ä–æ–¥–ª–∏—Ç—å —Å–æ —Å–∫–∏–¥–∫–æ–π 30%
                    </h3>
                  </div>
                  <div className="flex items-baseline justify-center space-x-2">
                    <span className="text-2xl font-bold text-orange-500">1750‚ÇΩ</span>
                    <span className="text-base text-gray-500 line-through">2500‚ÇΩ</span>
                    <span className="text-sm text-gray-600">/–º–µ—Å</span>
                  </div>
                  <p className={`text-xs mt-2 theme-transition ${isDark ? "text-gray-400" : "text-gray-600"}`}>
                    ‚è∞ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç —Ç–æ–ª—å–∫–æ 24 —á–∞—Å–∞
                  </p>
                </div>

                <div className="space-y-2 mb-4">
                  <h4 className={`font-semibold text-sm theme-transition ${isDark ? "text-white" : "text-gray-900"}`}>
                    ‚ú® –ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:
                  </h4>
                  <div className="grid grid-cols-1 gap-1">
                    {premiumFeatures.map((feature, index) => (
                      <div key={index} className="flex items-center">
                        <CheckCircle className="w-3 h-3 text-green-500 mr-2 flex-shrink-0" />
                        <span className={`text-xs theme-transition ${isDark ? "text-gray-300" : "text-gray-700"}`}>
                          {feature}
                        </span>
                      </div>
                    ))}
                  </div>
                </div>

                <Button
                  onClick={onUpgrade}
                  className="w-full bg-gradient-to-r from-orange-500 to-red-500 hover:from-orange-600 hover:to-red-600 text-white font-bold py-2 text-base shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105"
                >
                  <Crown className="w-4 h-4 mr-2" />
                  –í—ã–±—Ä–∞—Ç—å –ø–ª–∞–Ω –ø–æ–¥–ø–∏—Å–∫–∏
                </Button>
              </div>
            </div>

            {/* Alternative Plans */}
            <div className="grid grid-cols-2 gap-3">
              <div
                className={`p-3 rounded-xl border theme-transition ${
                  isDark ? "bg-gray-700/30 border-gray-600" : "bg-gray-50 border-gray-200"
                }`}
              >
                <div className="text-center">
                  <Zap className="w-6 h-6 text-blue-500 mx-auto mb-2" />
                  <h4 className={`font-bold text-sm theme-transition ${isDark ? "text-white" : "text-gray-900"}`}>
                    –ë–∞–∑–æ–≤–∞—è
                  </h4>
                  <p className="text-lg font-bold text-blue-500">1000‚ÇΩ</p>
                  <p className={`text-xs theme-transition ${isDark ? "text-gray-400" : "text-gray-600"}`}>/–º–µ—Å—è—Ü</p>
                  <Button
                    onClick={onUpgrade}
                    variant="outline"
                    size="sm"
                    className={`w-full mt-2 text-xs theme-transition ${
                      isDark ? "border-gray-600 hover:bg-gray-700" : "border-gray-300 hover:bg-gray-50"
                    }`}
                  >
                    –í—ã–±—Ä–∞—Ç—å
                  </Button>
                </div>
              </div>

              <div
                className={`p-3 rounded-xl border theme-transition ${
                  isDark ? "bg-gray-700/30 border-gray-600" : "bg-gray-50 border-gray-200"
                }`}
              >
                <div className="text-center">
                  <Crown className="w-6 h-6 text-purple-500 mx-auto mb-2" />
                  <h4 className={`font-bold text-sm theme-transition ${isDark ? "text-white" : "text-gray-900"}`}>
                    –ü—Ä–µ–º–∏—É–º
                  </h4>
                  <p className="text-lg font-bold text-purple-500">5000‚ÇΩ</p>
                  <p className={`text-xs theme-transition ${isDark ? "text-gray-400" : "text-gray-600"}`}>/–º–µ—Å—è—Ü</p>
                  <Button
                    onClick={onUpgrade}
                    variant="outline"
                    size="sm"
                    className={`w-full mt-2 text-xs theme-transition ${
                      isDark ? "border-gray-600 hover:bg-gray-700" : "border-gray-300 hover:bg-gray-50"
                    }`}
                  >
                    –í—ã–±—Ä–∞—Ç—å
                  </Button>
                </div>
              </div>
            </div>

            {/* Footer */}
            <div className={`text-center p-3 rounded-lg theme-transition ${isDark ? "bg-gray-700/30" : "bg-gray-50"}`}>
              <p className={`text-xs theme-transition ${isDark ? "text-gray-400" : "text-gray-600"}`}>
                üí° <strong>–°–æ–≤–µ—Ç:</strong> –ü—Ä–æ–¥–ª–∏—Ç–µ —Å–µ–π—á–∞—Å –∏ –ø–æ–ª—É—á–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –Ω–µ–¥–µ–ª—é –±–µ—Å–ø–ª–∞—Ç–Ω–æ!
              </p>
            </div>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  )
}
